unit uEndereco;

interface

type
  TEndereco = class
  private
    FIdEndereco: Integer;
    FIdEmpresa: Integer;
    FIdTitular: Integer;
    FNome: string;
    FNumero: string;
    FBairro: string;
    FIdCidade: Integer;
    FIdUF: Integer;
    FCEP: string;
    FStatus: Char;
    FExcluido: Char;
    FDataExcluido: TDate;
    FTipoCadastro: Char;
  public
    property Id: Integer read FIdEndereco write FIdEndereco;
    property IdEmpresa: Integer read FIdEmpresa write FIdEmpresa;
    property IdTitular: Integer read FIdTitular write FIdTitular;
    property Nome: string read FNome write FNome;
    property Numero: string read FNumero write FNumero;
    property Bairro: string read FBairro write FBairro;
    property IdCidade: Integer read FIdCidade write FIdCidade;
    property IdUF: Integer read FIdUF write FIdUF;
    property CEP: string read FCEP write FCEP;
    property Status: Char read FStatus write FStatus;
    property Excluido: Char read FExcluido write FExcluido;
    property DataExcluido: TDate read FDataExcluido write FDataExcluido;
    property TipoCadastro: Char read FTipoCadastro write FTipoCadastro;

    function Cadastrar: Boolean;
    function Atualizar: Boolean;
  end;

implementation

uses
  FireDAC.Comp.Client, uUtils, uDataModule;

{ TEndereco }

function TEndereco.Atualizar: Boolean;
var
  Query: TFDQuery;
begin
  Query := InstanciarFDQuery(dmDados.Dados);
  try
    Query.Close;
    Query.SQL.Clear;
    Query.SQL.Add('update cadEnderecos set idTitular = :pIdTitular, idEmpresa = :pIdEmpresa, nmEndereco = :pNmEndereco,');
    Query.SQL.Add('nmBairro = :pNmBairro, idCidade = :pIdCidade, idUf = :pIdUf, nuCep = :pNuCep, stAtivo = :pStAtivo,');
    Query.SQL.Add('stExcluido = :pStExcluido, dtExcluido = :pDtExcluido, tpCadastro = :pTpCadastro');
    Query.ParamByName('pIdTitular').AsInteger := Self.IdTitular;
    Query.ParamByName('pIdEmpresa').AsInteger := Self.IdEmpresa;
    Query.ParamByName('pNmEndereco').AsString := Self.Nome;
    Query.ParamByName('pNmBairro').AsString := Self.Bairro;
    Query.ParamByName('pIdCidade').AsInteger := Self.IdCidade;
    Query.ParamByName('pIdUf').AsInteger := Self.IdUF;
    Query.ParamByName('pNuCep').AsString := Self.CEP;
    Query.ParamByName('pStAtivo').AsString := Self.Status;
    Query.ParamByName('pStExcluido').AsString := Self.Excluido;
    Query.ParamByName('pDtExcluido').AsDate := Self.DataExcluido;
    Query.ParamByName('pTpCadastro').AsString := Self.TipoCadastro;
  finally

  end;
end;

function TEndereco.Cadastrar: Boolean;
begin

end;

end.
